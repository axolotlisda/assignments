What are the typical environments that make up a pipeline?
- The development environment is typically the developers local machine. Where they can safely make changes, add features and improve the code without impacting actual users.
The test environment is set up to facilitate testing of the application. This environment may use different tools and configuration settings (like more verbose logging) to validate a programâ€™s behavior and identify bugs with automated tests.
The staging environment usually mirrors the production environment but deployments are not meant to be public.
The production environment runs the application so that it is accessible by users.

What is an environment variable?
- The foundation of any environment is the operating system, which provides ways to store local variables. Not surprisingly, these are known as environment variables.
Environment variables allow us to set this information where the application will run without sharing it on git or Github. Because these variables can only be accessed locally, our application can access these sensitive values without making them public.

Why should we use environment variables?
- Why are environment variables important? After all, the information could be added to the git repository (and by extension Github). While tools like git and Github are excellent for storing, versioning and sharing code; sensitive information like API keys or passwords should be kept private. Even if you remove the private data from the current commit, it may still live on in the commit history!

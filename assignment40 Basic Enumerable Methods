What does the #each method do? What does it return?
#Calling #each on an array will iterate through that array and will yield each element to a code block, where a task can be performed:

What does the #each_with_index method do?
#This method is nearly the same as #each, but it provides some additional functionality by yielding two block variables instead of one as it iterates through an array.

What does the #map method do?
#The #map method (also called #collect) transforms each element from an array according to whatever block you pass to it and returns the transformed elements in a new array.

What does the #select method do?
#The #select method (also called #filter) passes every item in an array to a block and returns a new array with only the items for which the condition you set in the block evaluated to true

What does the #reduce method do?
#it reduces an array or hash down to a single object.

When should you use do...end around a code block versus {...}?
#What if the block you want to pass to a method requires more logic than can fit on one line? It starts to become less readable and looks unwieldy. For multi-line blocks, the commonly accepted best practice is to change up the syntax to use do...end instead of {...}:

Why should you avoid using the bang methods of enumerables?
#this method is destructive, it will modify your variables that you might need in future for references
